//Brute Force

class Solution {
public:
    int countBinarySubstrings(string s) {
        vector<int>count;
        int sum=1;
        for(int i=1;i<=s.size();i++){
            if(s[i]==s[i-1])
                sum++;
            else{
                count.push_back(sum);
                sum=1;
            }
        }

        int ans=0;
        for(int i=1;i<count.size();i++){
            ans+=min(count[i],count[i-1]);
        }

        return ans;
    }
};


// Optimal Soluition 
class Solution {
public:
    int countBinarySubstrings(string s) {
        int prev_count=0,cur_count=1,ans=0;

        for(int i=1;i<s.size();i++){
            if(s[i]==s[i-1]){
                cur_count++;
            }
            else{
                ans+=min(cur_count,prev_count);
                prev_count=cur_count;
                cur_count=1;
            }
        }
        return ans+min(prev_count,cur_count);
    }
};
