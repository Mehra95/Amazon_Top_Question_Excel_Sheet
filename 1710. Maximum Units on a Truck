// class Solution {
//     public:
//     static bool myfunction(vector<int> &a,vector<int> &b){
//         return a[1]>b[1];
//     }

//     int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
//         sort(boxTypes.begin(),boxTypes.end(),myfunction);

//         int ans=0;
//         for(int i=0;i<boxTypes.size();i++){
//                 if(boxTypes[i][0]<=truckSize){
//                     ans+=boxTypes[i][0]*boxTypes[i][1];
//                     truckSize=truckSize-boxTypes[i][0];
//                 }
//                 else{
//                     ans+=truckSize*boxTypes[i][1];
//                     truckSize=0;
//                     return ans;
//                 }
//             }
        
//         return ans;
//     }
// };


class Solution {
    public:
    static bool myfunction(vector<int> &a,vector<int> &b){
        return a[1]>b[1];
    }

    int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
        sort(boxTypes.begin(),boxTypes.end(),myfunction);

        int ans=0;
        for(int i=0;i<boxTypes.size();i++){
            int temp=min(boxTypes[i][0],truckSize);
            ans+=temp*boxTypes[i][1];
            truckSize-=temp;
            if(truckSize==0)break;    
        }
        
        return ans;
    }
};
